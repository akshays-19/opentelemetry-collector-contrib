name: build-and-test
on:
  push:
    branches: [master]
    tags:
      - v[0-9]+.[0-9]+.[0-9]+
  pull_request:

jobs:
  windows-test:
    runs-on: windows-latest
    env:
      TEST_RESULTS: testbed/tests/results/junit/results.xml
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
      - name: Setup Go
        uses: actions/setup-go@v2.1.3
        with:
          go-version: 1.15
      - name: Setup env
        run: |
          echo "GOPATH=$(go env GOPATH)" >> $GITHUB_ENV
          echo "$(go env GOPATH)/bin" >> $GITHUB_PATH
        shell: bash
      - name: Restore module cache
        uses: actions/cache@v2
        env:
          cache-name: cache-go-modules
        with:
          path: \Users\runneradmin\go\pkg\mod
          key: go-pkg-mod-${{ runner.os }}-${{ hashFiles('./go.mod') }}
      - name: Run Unit tests
        run: go test ./...
      - name: GitHub issue generator
        if: ${{ failure() && github.ref == 'ref/head/master' }}
        run: |
          go run cmd/issuegenerator/main.go $TEST_RESULTS
  setup-environment:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
      - name: Setup Go
        uses: actions/setup-go@v2.1.3
        with:
          go-version: 1.15
      - name: Setup env
        run: |
          echo "GOPATH=$(go env GOPATH)" >> $GITHUB_ENV
          echo "$(go env GOPATH)/bin" >> $GITHUB_PATH
      - name: Install tools
        run: make install-tools
      - name: Upload tool binaries
        uses: actions/upload-artifact@v2
        with:
          name: tool-binaries
          path: /home/runner/go/bin
  lint:
    runs-on: ubuntu-latest
    needs: [setup-environment]
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
      - name: Setup Go
        uses: actions/setup-go@v2.1.3
        with:
          go-version: 1.15
      - name: Setup env
        run: |
          echo "GOPATH=$(go env GOPATH)" >> $GITHUB_ENV
          echo "$(go env GOPATH)/bin" >> $GITHUB_PATH
      - name: Restore module cache
        uses: actions/cache@v2
        env:
          cache-name: cache-go-modules
        with:
          path: /home/runner/go/pkg/mod
          key: go-pkg-mod-${{ runner.os }}-${{ hashFiles('./go.mod') }}
      - name: Download tool binaries
        uses: actions/download-artifact@v2
        with:
          name: tool-binaries
          path: /home/runner/go/bin
      - name: Add execute permissions to tool binaries
        run: chmod -R +x /home/runner/go/bin
      - name: Lint
        run: make -j4 gochecklicense goimpi golint gomisspell
      - name: Gen Metadata
        run: make genmdata
      - name: Check generated metadata
        run: git diff --exit-code || (echo 'Generated code is out of date, please run "make genmdata" and commit the changes in this PR.' && exit 1)
  cross-compile:
    runs-on: ubuntu-latest
    needs: [setup-environment]
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
      - name: Setup Go
        uses: actions/setup-go@v2.1.3
        with:
          go-version: 1.15
      - name: Setup env
        run: |
          echo "GOPATH=$(go env GOPATH)" >> $GITHUB_ENV
          echo "$(go env GOPATH)/bin" >> $GITHUB_PATH
      - name: Restore module cache
        uses: actions/cache@v2
        env:
          cache-name: cache-go-modules
        with:
          path: /home/runner/go/pkg/mod
          key: go-pkg-mod-${{ runner.os }}-${{ hashFiles('./go.mod') }}
      - name: Download tool binaries
        uses: actions/download-artifact@v2
        with:
          name: tool-binaries
          path: /home/runner/go/bin
      - name: Add execute permissions to tool binaries
        run: chmod -R +x /home/runner/go/bin
      - name: Build collector for all archs
        run: grep ^binaries-all-sys Makefile|fmt -w 1|tail -n +2|xargs make
      - name: Upload collector binaries
        uses: actions/upload-artifact@v2
        with:
          name: collector-binaries
          path: ./bin
